<?xml version="1.0" encoding="UTF-8"?>
<!--由于本文件都是以security开头 所以把security修改为这文件的首要命名空间-->
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">
    <!--use-expressions 使用表达式 hasRole之类的-->
    <http use-expressions="true">
        <!--intercept规则从上往下走 所以范围越大越靠后 否则直接就给限制死了 下面的就没用了-->
        <intercept-url pattern="/statics/**" access="permitAll"/>
        <intercept-url pattern="/login" access="permitAll"/>
        <intercept-url pattern="/" access="permitAll"/>
        <intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>

        <!--TODO 2016年11月19日 登录失败跳转页面是/login/check 而不是/login?login_error=t-->
        <!--设置自定义的login页面-->
        <form-login default-target-url="/welcome"
                    login-page="/login"
                    login-processing-url="/login/check"
                    username-parameter="username"
                    password-parameter="password"
                    authentication-failure-forward-url="/login?login_error=t"/>

        <logout logout-success-url="/login?logout"/>
        <!--enable csrf-->
        <!--暂时不明白csrf原理 先给改成disable了-->
        <csrf/>
    </http>
    <authentication-manager>
        <authentication-provider>
            <!--default
            sql: select username,password,enabled from users where username = ?
            sql: select username,authority from authorities where username = ?
            -->
            <!--todo 这里jdbc连接不上 登不上去-->
            <jdbc-user-service data-source-ref="dataSource" id="userService"

                               users-by-username-query="SELECT  username,password,enable FROM t_user WHERE username = ?;"
                               group-authorities-by-username-query="SELECT  username,group_name FROM t_user WHERE username = ?"
            />
            <!--<user-service>
                <user name="lucy" authorities="ROLE_USER" password="123"/>
            </user-service>-->
        </authentication-provider>
    </authentication-manager>
</beans:beans>